version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: front-docker
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`dsp-archiwebf22-yy-om.bio`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    volumes:
      - ./frontend/src:/app/src
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - mynetwork

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: back-docker
    ports:
      - "5001:5001"
    depends_on:
      - db
    networks:
      - mynetwork

  db:
    image: "mongo"
    container_name: db-docker
    ports:
      - "27017:27017"
    volumes:
      - data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mynetwork

  jenkins:
    image: jenkins/jenkins:lts-jdk11
    container_name: jenkins
    restart: always
    user: root
    ports:
      - "8080:8080"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose
    networks:
      - mynetwork
      
  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - mynetwork

volumes:
  data:
  jenkins-data:

networks:
  mynetwork:
    external:
      name: traefik_default
